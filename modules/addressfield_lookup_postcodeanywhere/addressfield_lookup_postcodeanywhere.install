<?php

/**
 * @file
 * Install/uninstall functions for tAddress Field Lookup Postcode Anywhere.
 */

/**
 * Implements hook_schema().
 */
function addressfield_lookup_postcodeanywhere_schema() {
  // Postcode anywhere country data cache.
  $schema['cache_addressfield_lookup_postcodeanywhere_country_data'] = drupal_get_schema_unprocessed('system', 'cache');

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function addressfield_lookup_postcodeanywhere_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    // Add a requirement for a working default addressfield lookup service.
    $requirements['addressfield_lookup_postcodeanywhere'] = [
      'title' => t('Address Field Lookup - Postcode Anywhere'),
    ];

    // Determine the status of the requirement.
    if (!\Drupal::config('loqate.loqateapikeyconfig')->get('loqate_api_key')) {
      // No default service available.
      $requirements['addressfield_lookup_postcodeanywhere']['value'] = t('Not configured');
      $requirements['addressfield_lookup_postcodeanywhere']['severity'] = REQUIREMENT_WARNING;
      // @FIXME
// url() expects a route name or an external URI.
// $requirements['addressfield_lookup_postcodeanywhere']['description'] = t('Postcode Anywhere has not been configured. Please enter the license on the <a href="@config_url">configuration page</a>', array('@config_url' => url('admin/config/regional/addressfield-lookup/postcodeanywhere/configure')));

    }
    else {
      $requirements['addressfield_lookup_postcodeanywhere']['value'] = t('OK');
      $requirements['addressfield_lookup_postcodeanywhere']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_N().
 *
 * Create the country data cache table.
 */
function addressfield_lookup_postcodeanywhere_update_7000() {
  drupal_install_schema('addressfield_lookup_postcodeanywhere');
}

/**
 * Implements hook_update_N().
 *
 * Migrate postcode anywhere config variables.
 */
function addressfield_lookup_postcodeanywhere_update_7001() {
  // Login.
  // @FIXME
// // @FIXME
// // This looks like another module's variable. You'll need to rewrite this call
// // to ensure that it uses the correct configuration object.
// $postcodeanywhere_login = variable_get('postcodeanywhere_login', FALSE);

  if (FALSE !== $postcodeanywhere_login && FALSE !== \Drupal::config('addressfield_lookup_postcodeanywhere.settings')->get('addressfield_lookup_postcodeanywhere_login')) {
    \Drupal::configFactory()->getEditable('addressfield_lookup_postcodeanywhere.settings')->set('addressfield_lookup_postcodeanywhere_login', $postcodeanywhere_login)->save();
    // @FIXME
// // @FIXME
// // This looks like another module's variable. You'll need to rewrite this call
// // to ensure that it uses the correct configuration object.
// variable_del('postcodeanywhere_login');

  }

  // License.
  // @FIXME
// // @FIXME
// // This looks like another module's variable. You'll need to rewrite this call
// // to ensure that it uses the correct configuration object.
// $postcodeanywhere_license = variable_get('postcodeanywhere_license', FALSE);

  if (FALSE !== $postcodeanywhere_license && FALSE !== \Drupal::config('loqate.loqateapikeyconfig')->get('loqate_api_key')) {
    \Drupal::configFactory()->getEditable('loqate.loqateapikeyconfig')->set('loqate_api_key', $postcodeanywhere_license)->save();
    // @FIXME
// // @FIXME
// // This looks like another module's variable. You'll need to rewrite this call
// // to ensure that it uses the correct configuration object.
// variable_del('postcodeanywhere_license');

  }
}
